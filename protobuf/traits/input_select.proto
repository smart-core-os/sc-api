syntax = "proto3";

package smartcore.traits;

option csharp_namespace = "Smartcore.Traits";
option go_package = "github.com/smart-core-os/sc-api/go/traits";
option java_multiple_files = true;
option java_outer_classname = "InputSelectProto";
option java_package = "dev.smartcore.traits";
option php_namespace = "Smartcore\\Traits";

import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "types/info.proto";

// A trait to control the input for a device. Typically related to AV devices like displays or presentation switchers.
// A more complicated device might have multiple outputs, this trait also supports this.
service InputSelectApi {
  // request that the input be selected
  rpc UpdateInput (UpdateInputRequest) returns (Input);

  // get the current value of the selected input
  rpc GetInput (GetInputRequest) returns (Input);

  // request updates to changes in the selected input
  rpc PullInput (PullInputRequest) returns (stream PullInputResponse);

  // todo: support ListInput to query for 'outputs that show input A' or 'the state of all outputs'
}

// Describes the capabilities of a specific named device with respect to this trait.
service InputSelectInfo {
  // Get information about how a named device implements Input features
  rpc DescribeInput (DescribeInputRequest) returns (InputSupport);
}

// The currently selected input
message Input {
  // The current choice for the video input. Will be absent if there is no video input chosen.
  string video_input = 1;
  // The current choice for the audio input. Absent means no audio input is chosen unless independent_av is false which
  // implies the audio_input is the same as the video_input
  string audio_input = 2;
  // If true then audio and video changes will not affect the other. False implies that changes to audio or video will
  // change the input selection for the other to keep them consistent
  bool independent_av = 3;

  // Which output the input is sent to. Optional when the device only has one output, required otherwise
  string output = 4;

  // todo: potentially support video / audio muting
}

// InputSupport describes the capabilities of devices implementing this trait
message InputSupport {
  // How a named device supports read/write/pull apis
  smartcore.types.ResourceSupport resource_support = 1;
  // the list of inputs that can be selected on this device
  repeated AvPort inputs = 2;
  // indicate the possible mode of input selection that are supported by this device. This is not the current mode, just
  // the supported mode the device allows
  Feature supported_feature = 3;
  // The list of outputs that can have inputs on this device
  repeated AvPort outputs = 4;

  // possible modes an input select device can
  enum Feature {
    // The feature is not specified
    FEATURE_UNSPECIFIED = 0;
    // both audio and video are treated as one. independent_av should be considered false in this mode
    AV = 1;
    // Only audio inputs are supported
    AUDIO_ONLY = 2;
    // Only video inputs are supported
    VIDEO_ONLY = 3;
    // Audio and video are both supported and can be selected independently if desired. The independent_av property can
    // be true in this mode only
    INDEPENDENT = 4;
  }
}

// represents a source (or destination) for the AV signal
message AvPort {
  // Unique name for the port, used as the value for input or output properties
  string name = 1;
  // Official human readable name for this port
  string title = 2;
  string description = 3;
  // If this port supports different features from the device as a whole, specify them here. For example some ports
  // might be audio only or not support audio breakout
  InputSupport.Feature supported_feature = 4;
}

// A request to update the current input
message UpdateInputRequest {
  // The name of the device to update
  string name = 1;
  // The new input value
  Input input = 2;
  // the fields we are intending to update. Paths are relative to the input not this request
  google.protobuf.FieldMask update_mask = 3;
}

// A request to get the currently selected input
message GetInputRequest {
  // The name of the device to get the value for
  string name = 1;
  // Required if the device has multiple outputs. The name of the output to get the input for.
  string output = 2;
  // The state fields to fetch
  google.protobuf.FieldMask read_mask = 3;
}

// Request to begin a subscription for selected input changes
message PullInputRequest {
  // The name of the device we want events from
  string name = 1;
  // The state fields to fetch
  google.protobuf.FieldMask read_mask = 2;
  // When true the device will only send changes to the resource value.
  // The default behaviour is to send the current value immediately followed by any updates as they happen.
  bool updates_only = 3;
}

// A response as part of the stream of changes to the selected input
message PullInputResponse {
  // The list of changes
  repeated Change changes = 1;

  // A change to a single devices range value
  message Change {
    // name for the device that issued the change
    string name = 1;
    // when the change occurred
    google.protobuf.Timestamp change_time = 2;
    // The new value for the selected input
    Input input = 3;
  }
}

message DescribeInputRequest {
  // The name of the device
  string name = 1;
}
