// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.1
// source: traits/hail.proto

package traits

import (
	types "github.com/smart-core-os/sc-api/go/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Hail_State int32

const (
	// The state has not been supplied.
	Hail_STATE_UNSPECIFIED Hail_State = 0
	// The hail has been accepted and the transport is on its way to the origin.
	// Typically transitions into the BOARDING state.
	Hail_CALLED Hail_State = 1
	// The transport has arrived at the origin and is accepting passengers.
	// Typically transitions into the DEPARTED state.
	Hail_BOARDING Hail_State = 2
	// The transport is moving to the destination.
	// Typically transitions into the ARRIVED state.
	Hail_DEPARTED Hail_State = 3
	// The transport is at the destination.
	// This concludes this hail.
	// The device may remove this hail once it has arrived.
	// It is recommended that the device keep arrived hails for a short period of time (minutes) to aid clients who are
	// checking or polling hail states to check for arrival.
	// It is good practice, but not required, for a client to delete a hail once the information is no longer needed.
	Hail_ARRIVED Hail_State = 4
)

// Enum value maps for Hail_State.
var (
	Hail_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "CALLED",
		2: "BOARDING",
		3: "DEPARTED",
		4: "ARRIVED",
	}
	Hail_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"CALLED":            1,
		"BOARDING":          2,
		"DEPARTED":          3,
		"ARRIVED":           4,
	}
)

func (x Hail_State) Enum() *Hail_State {
	p := new(Hail_State)
	*p = x
	return p
}

func (x Hail_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Hail_State) Descriptor() protoreflect.EnumDescriptor {
	return file_traits_hail_proto_enumTypes[0].Descriptor()
}

func (Hail_State) Type() protoreflect.EnumType {
	return &file_traits_hail_proto_enumTypes[0]
}

func (x Hail_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Hail_State.Descriptor instead.
func (Hail_State) EnumDescriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{0, 0}
}

// A hail is a request from a caller to bring transport to the callers location.
// Like hailing a taxi.
type Hail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A tracking id for this hail.
	// This id may be used to subscribe or update the hail after creation.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The location for the start of the transportation.
	// Optional.
	// Supplied by the caller on write to indicate where the transport should "pick them up from", if absent on write the
	// device typically has a defined location - i.e. a call button for a lift inherently has a floor associated.
	//
	// During create the device is free to return a different origin location but that location _should_ be a more
	// specific variation to the supplied origin.
	// For example you may create a hail with origin "Ground Floor" and the device returns a new, more specific origin
	// of "Ground Floor, Lobby B, Door 3".
	//
	// The origin should not change after the initial creation of the hail unless unavoidable. A changing origin can
	// confuse callers who are not watching for hail changes.
	Origin *Hail_Location `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	// The intended destination of the caller.
	// Optional.
	// Supplied by the caller on write, this indicates where the caller wishes to go.
	// The device may return a more specific location as a response to creating a hail.
	Destination *Hail_Location `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	// State reports which phase of the journey the transport is in.
	// Output only.
	//
	// Timestamps tracking the different states may report either the time the hail transitioned into that state or
	// predict when the hail is expected to transition into that state. Compare state with the supplied times to
	// know if it is a prediction or not. For example if state is CALLED and board_time is present, it represents a
	// predicted boarding time; if state is DEPARTED, then board_time is the time the transport entered into the BOARDING
	// state.
	State Hail_State `protobuf:"varint,4,opt,name=state,proto3,enum=smartcore.traits.Hail_State" json:"state,omitempty"`
	// The time the vehicle accepted the hail.
	CallTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=call_time,json=callTime,proto3" json:"call_time,omitempty"`
	// The time the transport either began boarding or is expected to be boarding.
	BoardTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=board_time,json=boardTime,proto3" json:"board_time,omitempty"`
	// The time the transport either departed or is expected to be departing.
	DepartTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=depart_time,json=departTime,proto3" json:"depart_time,omitempty"`
	// The time the transport either arrived or is expected to arrive.
	ArriveTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=arrive_time,json=arriveTime,proto3" json:"arrive_time,omitempty"`
}

func (x *Hail) Reset() {
	*x = Hail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hail) ProtoMessage() {}

func (x *Hail) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hail.ProtoReflect.Descriptor instead.
func (*Hail) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{0}
}

func (x *Hail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Hail) GetOrigin() *Hail_Location {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *Hail) GetDestination() *Hail_Location {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *Hail) GetState() Hail_State {
	if x != nil {
		return x.State
	}
	return Hail_STATE_UNSPECIFIED
}

func (x *Hail) GetCallTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CallTime
	}
	return nil
}

func (x *Hail) GetBoardTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BoardTime
	}
	return nil
}

func (x *Hail) GetDepartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartTime
	}
	return nil
}

func (x *Hail) GetArriveTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArriveTime
	}
	return nil
}

type CreateHailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the device
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hail *Hail  `protobuf:"bytes,2,opt,name=hail,proto3" json:"hail,omitempty"`
}

func (x *CreateHailRequest) Reset() {
	*x = CreateHailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHailRequest) ProtoMessage() {}

func (x *CreateHailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHailRequest.ProtoReflect.Descriptor instead.
func (*CreateHailRequest) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{1}
}

func (x *CreateHailRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateHailRequest) GetHail() *Hail {
	if x != nil {
		return x.Hail
	}
	return nil
}

type GetHailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the device
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the hail
	Id       string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ReadMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
}

func (x *GetHailRequest) Reset() {
	*x = GetHailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHailRequest) ProtoMessage() {}

func (x *GetHailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHailRequest.ProtoReflect.Descriptor instead.
func (*GetHailRequest) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{2}
}

func (x *GetHailRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetHailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetHailRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

type UpdateHailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the device
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// New hail properties.
	// Id must be set.
	Hail *Hail `protobuf:"bytes,2,opt,name=hail,proto3" json:"hail,omitempty"`
	// A list of fields to update relative to the Hail type.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateHailRequest) Reset() {
	*x = UpdateHailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHailRequest) ProtoMessage() {}

func (x *UpdateHailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHailRequest.ProtoReflect.Descriptor instead.
func (*UpdateHailRequest) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateHailRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateHailRequest) GetHail() *Hail {
	if x != nil {
		return x.Hail
	}
	return nil
}

func (x *UpdateHailRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type DeleteHailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the device
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the hail
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// If true, no error is returned if a hail with the given id can't be found.
	AllowMissing bool `protobuf:"varint,3,opt,name=allow_missing,json=allowMissing,proto3" json:"allow_missing,omitempty"`
}

func (x *DeleteHailRequest) Reset() {
	*x = DeleteHailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHailRequest) ProtoMessage() {}

func (x *DeleteHailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHailRequest.ProtoReflect.Descriptor instead.
func (*DeleteHailRequest) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteHailRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteHailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteHailRequest) GetAllowMissing() bool {
	if x != nil {
		return x.AllowMissing
	}
	return false
}

type DeleteHailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteHailResponse) Reset() {
	*x = DeleteHailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHailResponse) ProtoMessage() {}

func (x *DeleteHailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHailResponse.ProtoReflect.Descriptor instead.
func (*DeleteHailResponse) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{5}
}

type PullHailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the device.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the hail
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Fields to fetch relative to the Hail type.
	ReadMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	// When true the device will only send changes to the resource value.
	// The default behaviour is to send the current value immediately followed by any updates as they happen.
	UpdatesOnly bool `protobuf:"varint,4,opt,name=updates_only,json=updatesOnly,proto3" json:"updates_only,omitempty"`
}

func (x *PullHailRequest) Reset() {
	*x = PullHailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullHailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullHailRequest) ProtoMessage() {}

func (x *PullHailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullHailRequest.ProtoReflect.Descriptor instead.
func (*PullHailRequest) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{6}
}

func (x *PullHailRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullHailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PullHailRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

func (x *PullHailRequest) GetUpdatesOnly() bool {
	if x != nil {
		return x.UpdatesOnly
	}
	return false
}

type PullHailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Changes []*PullHailResponse_Change `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
}

func (x *PullHailResponse) Reset() {
	*x = PullHailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullHailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullHailResponse) ProtoMessage() {}

func (x *PullHailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullHailResponse.ProtoReflect.Descriptor instead.
func (*PullHailResponse) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{7}
}

func (x *PullHailResponse) GetChanges() []*PullHailResponse_Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

type ListHailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the device.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Fields to fetch relative to the Hail type
	ReadMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	// The maximum number of hails to return.
	// The service may return fewer than this value.
	// If unspecified, at most 50 items will be returned.
	// The maximum value is 1000; values above 1000 will be coerced to 1000.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous `ListHailsResponse` call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListHailsRequest) Reset() {
	*x = ListHailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHailsRequest) ProtoMessage() {}

func (x *ListHailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHailsRequest.ProtoReflect.Descriptor instead.
func (*ListHailsRequest) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{8}
}

func (x *ListHailsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListHailsRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

func (x *ListHailsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListHailsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListHailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hails []*Hail `protobuf:"bytes,1,rep,name=hails,proto3" json:"hails,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// If non-zero this is the total number of hails.
	// This may be an estimate.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListHailsResponse) Reset() {
	*x = ListHailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHailsResponse) ProtoMessage() {}

func (x *ListHailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHailsResponse.ProtoReflect.Descriptor instead.
func (*ListHailsResponse) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{9}
}

func (x *ListHailsResponse) GetHails() []*Hail {
	if x != nil {
		return x.Hails
	}
	return nil
}

func (x *ListHailsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListHailsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type PullHailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the device to fetch the state for
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Fields to fetch relative to the Hail type
	ReadMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	// When true the device will only send changes to the resource value.
	// The default behaviour is to send the current value immediately followed by any updates as they happen.
	UpdatesOnly bool `protobuf:"varint,3,opt,name=updates_only,json=updatesOnly,proto3" json:"updates_only,omitempty"`
}

func (x *PullHailsRequest) Reset() {
	*x = PullHailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullHailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullHailsRequest) ProtoMessage() {}

func (x *PullHailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullHailsRequest.ProtoReflect.Descriptor instead.
func (*PullHailsRequest) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{10}
}

func (x *PullHailsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullHailsRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

func (x *PullHailsRequest) GetUpdatesOnly() bool {
	if x != nil {
		return x.UpdatesOnly
	}
	return false
}

type PullHailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of changes which have occurred
	Changes []*PullHailsResponse_Change `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
}

func (x *PullHailsResponse) Reset() {
	*x = PullHailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullHailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullHailsResponse) ProtoMessage() {}

func (x *PullHailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullHailsResponse.ProtoReflect.Descriptor instead.
func (*PullHailsResponse) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{11}
}

func (x *PullHailsResponse) GetChanges() []*PullHailsResponse_Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

type DescribeHailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the device
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DescribeHailRequest) Reset() {
	*x = DescribeHailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeHailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeHailRequest) ProtoMessage() {}

func (x *DescribeHailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeHailRequest.ProtoReflect.Descriptor instead.
func (*DescribeHailRequest) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{12}
}

func (x *DescribeHailRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HailSupport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// How a named device supports read/write/pull apis
	ResourceSupport *types.ResourceSupport `protobuf:"bytes,1,opt,name=resource_support,json=resourceSupport,proto3" json:"resource_support,omitempty"`
	// The list of Locations that the implementing device can be requested to transport the passenger to.
	SupportedLocations []*Hail_Location `protobuf:"bytes,2,rep,name=supported_locations,json=supportedLocations,proto3" json:"supported_locations,omitempty"`
}

func (x *HailSupport) Reset() {
	*x = HailSupport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HailSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HailSupport) ProtoMessage() {}

func (x *HailSupport) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HailSupport.ProtoReflect.Descriptor instead.
func (*HailSupport) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{13}
}

func (x *HailSupport) GetResourceSupport() *types.ResourceSupport {
	if x != nil {
		return x.ResourceSupport
	}
	return nil
}

func (x *HailSupport) GetSupportedLocations() []*Hail_Location {
	if x != nil {
		return x.SupportedLocations
	}
	return nil
}

// A logical location, typically in terms the hail creator will understand.
// Locations do not need to accurately or uniquely represent a physical space, instead they should unambiguously
// describe that location within the context of the device.
// For example "Floor 3" vs "lat:112.33,long:0.222,el:43.2", "Teal Room" vs "Teal Room, Floor 1, HQ, Birmingham, UK"
type Hail_Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An unambiguous name for this location.
	// Optional on write, if other location fields are used to identify the location.
	// Required on output.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// An unambiguous display name for the location.
	// Will be presented to the client and should be recognised by people consuming this information.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *Hail_Location) Reset() {
	*x = Hail_Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hail_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hail_Location) ProtoMessage() {}

func (x *Hail_Location) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hail_Location.ProtoReflect.Descriptor instead.
func (*Hail_Location) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Hail_Location) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Hail_Location) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type PullHailResponse_Change struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the device that issued the change.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// When the change occurred
	ChangeTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=change_time,json=changeTime,proto3" json:"change_time,omitempty"`
	// The new value for the hail.
	Hail *Hail `protobuf:"bytes,3,opt,name=hail,proto3" json:"hail,omitempty"`
}

func (x *PullHailResponse_Change) Reset() {
	*x = PullHailResponse_Change{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullHailResponse_Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullHailResponse_Change) ProtoMessage() {}

func (x *PullHailResponse_Change) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullHailResponse_Change.ProtoReflect.Descriptor instead.
func (*PullHailResponse_Change) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{7, 0}
}

func (x *PullHailResponse_Change) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullHailResponse_Change) GetChangeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangeTime
	}
	return nil
}

func (x *PullHailResponse_Change) GetHail() *Hail {
	if x != nil {
		return x.Hail
	}
	return nil
}

type PullHailsResponse_Change struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the device that emitted this change
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The type of change (e.g. ADD, UPDATE, etc...)
	Type types.ChangeType `protobuf:"varint,2,opt,name=type,proto3,enum=smartcore.types.ChangeType" json:"type,omitempty"`
	// The new value to use for ADD|UPDATE changes
	NewValue *Hail `protobuf:"bytes,3,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	// The old value to use for UPDATE|REMOVE changes
	OldValue *Hail `protobuf:"bytes,4,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	// When the change occurred
	ChangeTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=change_time,json=changeTime,proto3" json:"change_time,omitempty"`
}

func (x *PullHailsResponse_Change) Reset() {
	*x = PullHailsResponse_Change{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_hail_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullHailsResponse_Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullHailsResponse_Change) ProtoMessage() {}

func (x *PullHailsResponse_Change) ProtoReflect() protoreflect.Message {
	mi := &file_traits_hail_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullHailsResponse_Change.ProtoReflect.Descriptor instead.
func (*PullHailsResponse_Change) Descriptor() ([]byte, []int) {
	return file_traits_hail_proto_rawDescGZIP(), []int{11, 0}
}

func (x *PullHailsResponse_Change) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullHailsResponse_Change) GetType() types.ChangeType {
	if x != nil {
		return x.Type
	}
	return types.ChangeType(0)
}

func (x *PullHailsResponse_Change) GetNewValue() *Hail {
	if x != nil {
		return x.NewValue
	}
	return nil
}

func (x *PullHailsResponse_Change) GetOldValue() *Hail {
	if x != nil {
		return x.OldValue
	}
	return nil
}

func (x *PullHailsResponse_Change) GetChangeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangeTime
	}
	return nil
}

var File_traits_hail_proto protoreflect.FileDescriptor

var file_traits_hail_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2f, 0x68, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74,
	0x72, 0x61, 0x69, 0x74, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc,
	0x04, 0x0a, 0x04, 0x48, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x48, 0x61, 0x69, 0x6c, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x12, 0x41, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x48, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74,
	0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x48, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x72, 0x72, 0x69,
	0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x72, 0x72, 0x69, 0x76,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x41, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x4c, 0x4c,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x50, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x0b, 0x0a, 0x07, 0x41, 0x52, 0x52, 0x49, 0x56, 0x45, 0x44, 0x10, 0x04, 0x22, 0x53, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x68, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x48, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x68, 0x61,
	0x69, 0x6c, 0x22, 0x6d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x48, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x73,
	0x6b, 0x22, 0x90, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x68,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6d, 0x61, 0x72,
	0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x48, 0x61, 0x69,
	0x6c, 0x52, 0x04, 0x68, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x73, 0x6b, 0x22, 0x5c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x0f, 0x50, 0x75, 0x6c,
	0x6c, 0x48, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52,
	0x08, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0xdf, 0x01, 0x0a,
	0x10, 0x50, 0x75, 0x6c, 0x6c, 0x48, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74,
	0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x48, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x1a, 0x85, 0x01, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x68, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61,
	0x69, 0x74, 0x73, 0x2e, 0x48, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x68, 0x61, 0x69, 0x6c, 0x22, 0x9b,
	0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x88, 0x01, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x68, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72,
	0x61, 0x69, 0x74, 0x73, 0x2e, 0x48, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x68, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x50, 0x75, 0x6c, 0x6c,
	0x48, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52,
	0x08, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0xd0, 0x02, 0x0a,
	0x11, 0x50, 0x75, 0x6c, 0x6c, 0x48, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x48, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x1a, 0xf4, 0x01, 0x0a, 0x06, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6d,
	0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x48,
	0x61, 0x69, 0x6c, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x33, 0x0a,
	0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61,
	0x69, 0x74, 0x73, 0x2e, 0x48, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x29, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x0b, 0x48,
	0x61, 0x69, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x4b, 0x0a, 0x10, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x50, 0x0a, 0x13, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x48, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xc0, 0x04, 0x0a, 0x07, 0x48, 0x61,
	0x69, 0x6c, 0x41, 0x70, 0x69, 0x12, 0x49, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48,
	0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x48, 0x61, 0x69, 0x6c,
	0x12, 0x43, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x48, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x2e, 0x73, 0x6d,
	0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73,
	0x2e, 0x48, 0x61, 0x69, 0x6c, 0x12, 0x49, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x48, 0x61, 0x69, 0x6c,
	0x12, 0x57, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x61, 0x69, 0x6c, 0x12, 0x23,
	0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x08, 0x50, 0x75, 0x6c,
	0x6c, 0x48, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x48, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c,
	0x48, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x54,
	0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x6d,
	0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x09, 0x50, 0x75, 0x6c, 0x6c, 0x48, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x22, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72,
	0x61, 0x69, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x48, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x48, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x32, 0x60, 0x0a, 0x08,
	0x48, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x54, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x48, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x48, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x73, 0x2e, 0x48, 0x61, 0x69, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x74,
	0x0a, 0x14, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x42, 0x09, 0x48, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x6d, 0x61, 0x72, 0x74, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2d, 0x6f, 0x73, 0x2f, 0x73, 0x63,
	0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0xaa, 0x02,
	0x10, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x74,
	0x73, 0xca, 0x02, 0x10, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x5c, 0x54, 0x72,
	0x61, 0x69, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_traits_hail_proto_rawDescOnce sync.Once
	file_traits_hail_proto_rawDescData = file_traits_hail_proto_rawDesc
)

func file_traits_hail_proto_rawDescGZIP() []byte {
	file_traits_hail_proto_rawDescOnce.Do(func() {
		file_traits_hail_proto_rawDescData = protoimpl.X.CompressGZIP(file_traits_hail_proto_rawDescData)
	})
	return file_traits_hail_proto_rawDescData
}

var file_traits_hail_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_traits_hail_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_traits_hail_proto_goTypes = []any{
	(Hail_State)(0),                  // 0: smartcore.traits.Hail.State
	(*Hail)(nil),                     // 1: smartcore.traits.Hail
	(*CreateHailRequest)(nil),        // 2: smartcore.traits.CreateHailRequest
	(*GetHailRequest)(nil),           // 3: smartcore.traits.GetHailRequest
	(*UpdateHailRequest)(nil),        // 4: smartcore.traits.UpdateHailRequest
	(*DeleteHailRequest)(nil),        // 5: smartcore.traits.DeleteHailRequest
	(*DeleteHailResponse)(nil),       // 6: smartcore.traits.DeleteHailResponse
	(*PullHailRequest)(nil),          // 7: smartcore.traits.PullHailRequest
	(*PullHailResponse)(nil),         // 8: smartcore.traits.PullHailResponse
	(*ListHailsRequest)(nil),         // 9: smartcore.traits.ListHailsRequest
	(*ListHailsResponse)(nil),        // 10: smartcore.traits.ListHailsResponse
	(*PullHailsRequest)(nil),         // 11: smartcore.traits.PullHailsRequest
	(*PullHailsResponse)(nil),        // 12: smartcore.traits.PullHailsResponse
	(*DescribeHailRequest)(nil),      // 13: smartcore.traits.DescribeHailRequest
	(*HailSupport)(nil),              // 14: smartcore.traits.HailSupport
	(*Hail_Location)(nil),            // 15: smartcore.traits.Hail.Location
	(*PullHailResponse_Change)(nil),  // 16: smartcore.traits.PullHailResponse.Change
	(*PullHailsResponse_Change)(nil), // 17: smartcore.traits.PullHailsResponse.Change
	(*timestamppb.Timestamp)(nil),    // 18: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),    // 19: google.protobuf.FieldMask
	(*types.ResourceSupport)(nil),    // 20: smartcore.types.ResourceSupport
	(types.ChangeType)(0),            // 21: smartcore.types.ChangeType
}
var file_traits_hail_proto_depIdxs = []int32{
	15, // 0: smartcore.traits.Hail.origin:type_name -> smartcore.traits.Hail.Location
	15, // 1: smartcore.traits.Hail.destination:type_name -> smartcore.traits.Hail.Location
	0,  // 2: smartcore.traits.Hail.state:type_name -> smartcore.traits.Hail.State
	18, // 3: smartcore.traits.Hail.call_time:type_name -> google.protobuf.Timestamp
	18, // 4: smartcore.traits.Hail.board_time:type_name -> google.protobuf.Timestamp
	18, // 5: smartcore.traits.Hail.depart_time:type_name -> google.protobuf.Timestamp
	18, // 6: smartcore.traits.Hail.arrive_time:type_name -> google.protobuf.Timestamp
	1,  // 7: smartcore.traits.CreateHailRequest.hail:type_name -> smartcore.traits.Hail
	19, // 8: smartcore.traits.GetHailRequest.read_mask:type_name -> google.protobuf.FieldMask
	1,  // 9: smartcore.traits.UpdateHailRequest.hail:type_name -> smartcore.traits.Hail
	19, // 10: smartcore.traits.UpdateHailRequest.update_mask:type_name -> google.protobuf.FieldMask
	19, // 11: smartcore.traits.PullHailRequest.read_mask:type_name -> google.protobuf.FieldMask
	16, // 12: smartcore.traits.PullHailResponse.changes:type_name -> smartcore.traits.PullHailResponse.Change
	19, // 13: smartcore.traits.ListHailsRequest.read_mask:type_name -> google.protobuf.FieldMask
	1,  // 14: smartcore.traits.ListHailsResponse.hails:type_name -> smartcore.traits.Hail
	19, // 15: smartcore.traits.PullHailsRequest.read_mask:type_name -> google.protobuf.FieldMask
	17, // 16: smartcore.traits.PullHailsResponse.changes:type_name -> smartcore.traits.PullHailsResponse.Change
	20, // 17: smartcore.traits.HailSupport.resource_support:type_name -> smartcore.types.ResourceSupport
	15, // 18: smartcore.traits.HailSupport.supported_locations:type_name -> smartcore.traits.Hail.Location
	18, // 19: smartcore.traits.PullHailResponse.Change.change_time:type_name -> google.protobuf.Timestamp
	1,  // 20: smartcore.traits.PullHailResponse.Change.hail:type_name -> smartcore.traits.Hail
	21, // 21: smartcore.traits.PullHailsResponse.Change.type:type_name -> smartcore.types.ChangeType
	1,  // 22: smartcore.traits.PullHailsResponse.Change.new_value:type_name -> smartcore.traits.Hail
	1,  // 23: smartcore.traits.PullHailsResponse.Change.old_value:type_name -> smartcore.traits.Hail
	18, // 24: smartcore.traits.PullHailsResponse.Change.change_time:type_name -> google.protobuf.Timestamp
	2,  // 25: smartcore.traits.HailApi.CreateHail:input_type -> smartcore.traits.CreateHailRequest
	3,  // 26: smartcore.traits.HailApi.GetHail:input_type -> smartcore.traits.GetHailRequest
	4,  // 27: smartcore.traits.HailApi.UpdateHail:input_type -> smartcore.traits.UpdateHailRequest
	5,  // 28: smartcore.traits.HailApi.DeleteHail:input_type -> smartcore.traits.DeleteHailRequest
	7,  // 29: smartcore.traits.HailApi.PullHail:input_type -> smartcore.traits.PullHailRequest
	9,  // 30: smartcore.traits.HailApi.ListHails:input_type -> smartcore.traits.ListHailsRequest
	11, // 31: smartcore.traits.HailApi.PullHails:input_type -> smartcore.traits.PullHailsRequest
	13, // 32: smartcore.traits.HailInfo.DescribeHail:input_type -> smartcore.traits.DescribeHailRequest
	1,  // 33: smartcore.traits.HailApi.CreateHail:output_type -> smartcore.traits.Hail
	1,  // 34: smartcore.traits.HailApi.GetHail:output_type -> smartcore.traits.Hail
	1,  // 35: smartcore.traits.HailApi.UpdateHail:output_type -> smartcore.traits.Hail
	6,  // 36: smartcore.traits.HailApi.DeleteHail:output_type -> smartcore.traits.DeleteHailResponse
	8,  // 37: smartcore.traits.HailApi.PullHail:output_type -> smartcore.traits.PullHailResponse
	10, // 38: smartcore.traits.HailApi.ListHails:output_type -> smartcore.traits.ListHailsResponse
	12, // 39: smartcore.traits.HailApi.PullHails:output_type -> smartcore.traits.PullHailsResponse
	14, // 40: smartcore.traits.HailInfo.DescribeHail:output_type -> smartcore.traits.HailSupport
	33, // [33:41] is the sub-list for method output_type
	25, // [25:33] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_traits_hail_proto_init() }
func file_traits_hail_proto_init() {
	if File_traits_hail_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_traits_hail_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Hail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateHailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetHailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateHailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteHailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteHailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PullHailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PullHailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListHailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ListHailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PullHailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PullHailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeHailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*HailSupport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Hail_Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*PullHailResponse_Change); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_hail_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*PullHailsResponse_Change); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_traits_hail_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_traits_hail_proto_goTypes,
		DependencyIndexes: file_traits_hail_proto_depIdxs,
		EnumInfos:         file_traits_hail_proto_enumTypes,
		MessageInfos:      file_traits_hail_proto_msgTypes,
	}.Build()
	File_traits_hail_proto = out.File
	file_traits_hail_proto_rawDesc = nil
	file_traits_hail_proto_goTypes = nil
	file_traits_hail_proto_depIdxs = nil
}
