// source: traits/light.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var types_info_pb = require('../types/info_pb.js');
goog.object.extend(proto, types_info_pb);
var types_number_pb = require('../types/number_pb.js');
goog.object.extend(proto, types_number_pb);
var types_tween_pb = require('../types/tween_pb.js');
goog.object.extend(proto, types_tween_pb);
goog.exportSymbol('proto.smartcore.traits.Brightness', null, global);
goog.exportSymbol('proto.smartcore.traits.BrightnessSupport', null, global);
goog.exportSymbol('proto.smartcore.traits.DescribeBrightnessRequest', null, global);
goog.exportSymbol('proto.smartcore.traits.GetBrightnessRequest', null, global);
goog.exportSymbol('proto.smartcore.traits.LightPreset', null, global);
goog.exportSymbol('proto.smartcore.traits.PullBrightnessRequest', null, global);
goog.exportSymbol('proto.smartcore.traits.PullBrightnessResponse', null, global);
goog.exportSymbol('proto.smartcore.traits.PullBrightnessResponse.Change', null, global);
goog.exportSymbol('proto.smartcore.traits.UpdateBrightnessRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.Brightness = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.traits.Brightness, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.Brightness.displayName = 'proto.smartcore.traits.Brightness';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.LightPreset = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.traits.LightPreset, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.LightPreset.displayName = 'proto.smartcore.traits.LightPreset';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.BrightnessSupport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.traits.BrightnessSupport.repeatedFields_, null);
};
goog.inherits(proto.smartcore.traits.BrightnessSupport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.BrightnessSupport.displayName = 'proto.smartcore.traits.BrightnessSupport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.UpdateBrightnessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.traits.UpdateBrightnessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.UpdateBrightnessRequest.displayName = 'proto.smartcore.traits.UpdateBrightnessRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.GetBrightnessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.traits.GetBrightnessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.GetBrightnessRequest.displayName = 'proto.smartcore.traits.GetBrightnessRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.PullBrightnessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.traits.PullBrightnessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.PullBrightnessRequest.displayName = 'proto.smartcore.traits.PullBrightnessRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.PullBrightnessResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.traits.PullBrightnessResponse.repeatedFields_, null);
};
goog.inherits(proto.smartcore.traits.PullBrightnessResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.PullBrightnessResponse.displayName = 'proto.smartcore.traits.PullBrightnessResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.PullBrightnessResponse.Change = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.traits.PullBrightnessResponse.Change, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.PullBrightnessResponse.Change.displayName = 'proto.smartcore.traits.PullBrightnessResponse.Change';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.DescribeBrightnessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.traits.DescribeBrightnessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.DescribeBrightnessRequest.displayName = 'proto.smartcore.traits.DescribeBrightnessRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.Brightness.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.Brightness.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.Brightness} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.Brightness.toObject = function(includeInstance, msg) {
  var f, obj = {
levelPercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
preset: (f = msg.getPreset()) && proto.smartcore.traits.LightPreset.toObject(includeInstance, f),
brightnessTween: (f = msg.getBrightnessTween()) && types_tween_pb.Tween.toObject(includeInstance, f),
targetLevelPercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
targetPreset: (f = msg.getTargetPreset()) && proto.smartcore.traits.LightPreset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.Brightness}
 */
proto.smartcore.traits.Brightness.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.Brightness;
  return proto.smartcore.traits.Brightness.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.Brightness} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.Brightness}
 */
proto.smartcore.traits.Brightness.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLevelPercent(value);
      break;
    case 2:
      var value = new proto.smartcore.traits.LightPreset;
      reader.readMessage(value,proto.smartcore.traits.LightPreset.deserializeBinaryFromReader);
      msg.setPreset(value);
      break;
    case 3:
      var value = new types_tween_pb.Tween;
      reader.readMessage(value,types_tween_pb.Tween.deserializeBinaryFromReader);
      msg.setBrightnessTween(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTargetLevelPercent(value);
      break;
    case 5:
      var value = new proto.smartcore.traits.LightPreset;
      reader.readMessage(value,proto.smartcore.traits.LightPreset.deserializeBinaryFromReader);
      msg.setTargetPreset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.Brightness.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.Brightness.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.Brightness} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.Brightness.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevelPercent();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getPreset();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.smartcore.traits.LightPreset.serializeBinaryToWriter
    );
  }
  f = message.getBrightnessTween();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      types_tween_pb.Tween.serializeBinaryToWriter
    );
  }
  f = message.getTargetLevelPercent();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getTargetPreset();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.smartcore.traits.LightPreset.serializeBinaryToWriter
    );
  }
};


/**
 * optional float level_percent = 1;
 * @return {number}
 */
proto.smartcore.traits.Brightness.prototype.getLevelPercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.traits.Brightness} returns this
 */
proto.smartcore.traits.Brightness.prototype.setLevelPercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional LightPreset preset = 2;
 * @return {?proto.smartcore.traits.LightPreset}
 */
proto.smartcore.traits.Brightness.prototype.getPreset = function() {
  return /** @type{?proto.smartcore.traits.LightPreset} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.traits.LightPreset, 2));
};


/**
 * @param {?proto.smartcore.traits.LightPreset|undefined} value
 * @return {!proto.smartcore.traits.Brightness} returns this
*/
proto.smartcore.traits.Brightness.prototype.setPreset = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.Brightness} returns this
 */
proto.smartcore.traits.Brightness.prototype.clearPreset = function() {
  return this.setPreset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.Brightness.prototype.hasPreset = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional smartcore.types.Tween brightness_tween = 3;
 * @return {?proto.smartcore.types.Tween}
 */
proto.smartcore.traits.Brightness.prototype.getBrightnessTween = function() {
  return /** @type{?proto.smartcore.types.Tween} */ (
    jspb.Message.getWrapperField(this, types_tween_pb.Tween, 3));
};


/**
 * @param {?proto.smartcore.types.Tween|undefined} value
 * @return {!proto.smartcore.traits.Brightness} returns this
*/
proto.smartcore.traits.Brightness.prototype.setBrightnessTween = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.Brightness} returns this
 */
proto.smartcore.traits.Brightness.prototype.clearBrightnessTween = function() {
  return this.setBrightnessTween(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.Brightness.prototype.hasBrightnessTween = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float target_level_percent = 4;
 * @return {number}
 */
proto.smartcore.traits.Brightness.prototype.getTargetLevelPercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.traits.Brightness} returns this
 */
proto.smartcore.traits.Brightness.prototype.setTargetLevelPercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional LightPreset target_preset = 5;
 * @return {?proto.smartcore.traits.LightPreset}
 */
proto.smartcore.traits.Brightness.prototype.getTargetPreset = function() {
  return /** @type{?proto.smartcore.traits.LightPreset} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.traits.LightPreset, 5));
};


/**
 * @param {?proto.smartcore.traits.LightPreset|undefined} value
 * @return {!proto.smartcore.traits.Brightness} returns this
*/
proto.smartcore.traits.Brightness.prototype.setTargetPreset = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.Brightness} returns this
 */
proto.smartcore.traits.Brightness.prototype.clearTargetPreset = function() {
  return this.setTargetPreset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.Brightness.prototype.hasTargetPreset = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.LightPreset.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.LightPreset.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.LightPreset} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.LightPreset.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.LightPreset}
 */
proto.smartcore.traits.LightPreset.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.LightPreset;
  return proto.smartcore.traits.LightPreset.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.LightPreset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.LightPreset}
 */
proto.smartcore.traits.LightPreset.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.LightPreset.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.LightPreset.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.LightPreset} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.LightPreset.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.traits.LightPreset.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.traits.LightPreset} returns this
 */
proto.smartcore.traits.LightPreset.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.smartcore.traits.LightPreset.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.traits.LightPreset} returns this
 */
proto.smartcore.traits.LightPreset.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.traits.BrightnessSupport.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.BrightnessSupport.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.BrightnessSupport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.BrightnessSupport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.BrightnessSupport.toObject = function(includeInstance, msg) {
  var f, obj = {
resourceSupport: (f = msg.getResourceSupport()) && types_info_pb.ResourceSupport.toObject(includeInstance, f),
brightnessAttributes: (f = msg.getBrightnessAttributes()) && types_number_pb.Int32Attributes.toObject(includeInstance, f),
presetsList: jspb.Message.toObjectList(msg.getPresetsList(),
    proto.smartcore.traits.LightPreset.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.BrightnessSupport}
 */
proto.smartcore.traits.BrightnessSupport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.BrightnessSupport;
  return proto.smartcore.traits.BrightnessSupport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.BrightnessSupport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.BrightnessSupport}
 */
proto.smartcore.traits.BrightnessSupport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_info_pb.ResourceSupport;
      reader.readMessage(value,types_info_pb.ResourceSupport.deserializeBinaryFromReader);
      msg.setResourceSupport(value);
      break;
    case 2:
      var value = new types_number_pb.Int32Attributes;
      reader.readMessage(value,types_number_pb.Int32Attributes.deserializeBinaryFromReader);
      msg.setBrightnessAttributes(value);
      break;
    case 3:
      var value = new proto.smartcore.traits.LightPreset;
      reader.readMessage(value,proto.smartcore.traits.LightPreset.deserializeBinaryFromReader);
      msg.addPresets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.BrightnessSupport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.BrightnessSupport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.BrightnessSupport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.BrightnessSupport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceSupport();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_info_pb.ResourceSupport.serializeBinaryToWriter
    );
  }
  f = message.getBrightnessAttributes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      types_number_pb.Int32Attributes.serializeBinaryToWriter
    );
  }
  f = message.getPresetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.smartcore.traits.LightPreset.serializeBinaryToWriter
    );
  }
};


/**
 * optional smartcore.types.ResourceSupport resource_support = 1;
 * @return {?proto.smartcore.types.ResourceSupport}
 */
proto.smartcore.traits.BrightnessSupport.prototype.getResourceSupport = function() {
  return /** @type{?proto.smartcore.types.ResourceSupport} */ (
    jspb.Message.getWrapperField(this, types_info_pb.ResourceSupport, 1));
};


/**
 * @param {?proto.smartcore.types.ResourceSupport|undefined} value
 * @return {!proto.smartcore.traits.BrightnessSupport} returns this
*/
proto.smartcore.traits.BrightnessSupport.prototype.setResourceSupport = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.BrightnessSupport} returns this
 */
proto.smartcore.traits.BrightnessSupport.prototype.clearResourceSupport = function() {
  return this.setResourceSupport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.BrightnessSupport.prototype.hasResourceSupport = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional smartcore.types.Int32Attributes brightness_attributes = 2;
 * @return {?proto.smartcore.types.Int32Attributes}
 */
proto.smartcore.traits.BrightnessSupport.prototype.getBrightnessAttributes = function() {
  return /** @type{?proto.smartcore.types.Int32Attributes} */ (
    jspb.Message.getWrapperField(this, types_number_pb.Int32Attributes, 2));
};


/**
 * @param {?proto.smartcore.types.Int32Attributes|undefined} value
 * @return {!proto.smartcore.traits.BrightnessSupport} returns this
*/
proto.smartcore.traits.BrightnessSupport.prototype.setBrightnessAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.BrightnessSupport} returns this
 */
proto.smartcore.traits.BrightnessSupport.prototype.clearBrightnessAttributes = function() {
  return this.setBrightnessAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.BrightnessSupport.prototype.hasBrightnessAttributes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated LightPreset presets = 3;
 * @return {!Array<!proto.smartcore.traits.LightPreset>}
 */
proto.smartcore.traits.BrightnessSupport.prototype.getPresetsList = function() {
  return /** @type{!Array<!proto.smartcore.traits.LightPreset>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.traits.LightPreset, 3));
};


/**
 * @param {!Array<!proto.smartcore.traits.LightPreset>} value
 * @return {!proto.smartcore.traits.BrightnessSupport} returns this
*/
proto.smartcore.traits.BrightnessSupport.prototype.setPresetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.smartcore.traits.LightPreset=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.traits.LightPreset}
 */
proto.smartcore.traits.BrightnessSupport.prototype.addPresets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.smartcore.traits.LightPreset, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.traits.BrightnessSupport} returns this
 */
proto.smartcore.traits.BrightnessSupport.prototype.clearPresetsList = function() {
  return this.setPresetsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.UpdateBrightnessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.UpdateBrightnessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.UpdateBrightnessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.UpdateBrightnessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
brightness: (f = msg.getBrightness()) && proto.smartcore.traits.Brightness.toObject(includeInstance, f),
delta: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.UpdateBrightnessRequest}
 */
proto.smartcore.traits.UpdateBrightnessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.UpdateBrightnessRequest;
  return proto.smartcore.traits.UpdateBrightnessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.UpdateBrightnessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.UpdateBrightnessRequest}
 */
proto.smartcore.traits.UpdateBrightnessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.smartcore.traits.Brightness;
      reader.readMessage(value,proto.smartcore.traits.Brightness.deserializeBinaryFromReader);
      msg.setBrightness(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDelta(value);
      break;
    case 4:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.UpdateBrightnessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.UpdateBrightnessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.UpdateBrightnessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.UpdateBrightnessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBrightness();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.smartcore.traits.Brightness.serializeBinaryToWriter
    );
  }
  f = message.getDelta();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.traits.UpdateBrightnessRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.traits.UpdateBrightnessRequest} returns this
 */
proto.smartcore.traits.UpdateBrightnessRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Brightness brightness = 2;
 * @return {?proto.smartcore.traits.Brightness}
 */
proto.smartcore.traits.UpdateBrightnessRequest.prototype.getBrightness = function() {
  return /** @type{?proto.smartcore.traits.Brightness} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.traits.Brightness, 2));
};


/**
 * @param {?proto.smartcore.traits.Brightness|undefined} value
 * @return {!proto.smartcore.traits.UpdateBrightnessRequest} returns this
*/
proto.smartcore.traits.UpdateBrightnessRequest.prototype.setBrightness = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.UpdateBrightnessRequest} returns this
 */
proto.smartcore.traits.UpdateBrightnessRequest.prototype.clearBrightness = function() {
  return this.setBrightness(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.UpdateBrightnessRequest.prototype.hasBrightness = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool delta = 3;
 * @return {boolean}
 */
proto.smartcore.traits.UpdateBrightnessRequest.prototype.getDelta = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.traits.UpdateBrightnessRequest} returns this
 */
proto.smartcore.traits.UpdateBrightnessRequest.prototype.setDelta = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional google.protobuf.FieldMask update_mask = 4;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.traits.UpdateBrightnessRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 4));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.traits.UpdateBrightnessRequest} returns this
*/
proto.smartcore.traits.UpdateBrightnessRequest.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.UpdateBrightnessRequest} returns this
 */
proto.smartcore.traits.UpdateBrightnessRequest.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.UpdateBrightnessRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.GetBrightnessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.GetBrightnessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.GetBrightnessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.GetBrightnessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
readMask: (f = msg.getReadMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.GetBrightnessRequest}
 */
proto.smartcore.traits.GetBrightnessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.GetBrightnessRequest;
  return proto.smartcore.traits.GetBrightnessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.GetBrightnessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.GetBrightnessRequest}
 */
proto.smartcore.traits.GetBrightnessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setReadMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.GetBrightnessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.GetBrightnessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.GetBrightnessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.GetBrightnessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReadMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.traits.GetBrightnessRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.traits.GetBrightnessRequest} returns this
 */
proto.smartcore.traits.GetBrightnessRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.FieldMask read_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.traits.GetBrightnessRequest.prototype.getReadMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.traits.GetBrightnessRequest} returns this
*/
proto.smartcore.traits.GetBrightnessRequest.prototype.setReadMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.GetBrightnessRequest} returns this
 */
proto.smartcore.traits.GetBrightnessRequest.prototype.clearReadMask = function() {
  return this.setReadMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.GetBrightnessRequest.prototype.hasReadMask = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.PullBrightnessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.PullBrightnessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.PullBrightnessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.PullBrightnessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
excludeRamping: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
readMask: (f = msg.getReadMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
updatesOnly: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.PullBrightnessRequest}
 */
proto.smartcore.traits.PullBrightnessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.PullBrightnessRequest;
  return proto.smartcore.traits.PullBrightnessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.PullBrightnessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.PullBrightnessRequest}
 */
proto.smartcore.traits.PullBrightnessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcludeRamping(value);
      break;
    case 3:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setReadMask(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdatesOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.PullBrightnessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.PullBrightnessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.PullBrightnessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.PullBrightnessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExcludeRamping();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getReadMask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getUpdatesOnly();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.traits.PullBrightnessRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.traits.PullBrightnessRequest} returns this
 */
proto.smartcore.traits.PullBrightnessRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool exclude_ramping = 2;
 * @return {boolean}
 */
proto.smartcore.traits.PullBrightnessRequest.prototype.getExcludeRamping = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.traits.PullBrightnessRequest} returns this
 */
proto.smartcore.traits.PullBrightnessRequest.prototype.setExcludeRamping = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional google.protobuf.FieldMask read_mask = 3;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.traits.PullBrightnessRequest.prototype.getReadMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 3));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.traits.PullBrightnessRequest} returns this
*/
proto.smartcore.traits.PullBrightnessRequest.prototype.setReadMask = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.PullBrightnessRequest} returns this
 */
proto.smartcore.traits.PullBrightnessRequest.prototype.clearReadMask = function() {
  return this.setReadMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.PullBrightnessRequest.prototype.hasReadMask = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool updates_only = 4;
 * @return {boolean}
 */
proto.smartcore.traits.PullBrightnessRequest.prototype.getUpdatesOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.traits.PullBrightnessRequest} returns this
 */
proto.smartcore.traits.PullBrightnessRequest.prototype.setUpdatesOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.traits.PullBrightnessResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.PullBrightnessResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.PullBrightnessResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.PullBrightnessResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.PullBrightnessResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
changesList: jspb.Message.toObjectList(msg.getChangesList(),
    proto.smartcore.traits.PullBrightnessResponse.Change.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.PullBrightnessResponse}
 */
proto.smartcore.traits.PullBrightnessResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.PullBrightnessResponse;
  return proto.smartcore.traits.PullBrightnessResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.PullBrightnessResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.PullBrightnessResponse}
 */
proto.smartcore.traits.PullBrightnessResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.traits.PullBrightnessResponse.Change;
      reader.readMessage(value,proto.smartcore.traits.PullBrightnessResponse.Change.deserializeBinaryFromReader);
      msg.addChanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.PullBrightnessResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.PullBrightnessResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.PullBrightnessResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.PullBrightnessResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.smartcore.traits.PullBrightnessResponse.Change.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.PullBrightnessResponse.Change.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.PullBrightnessResponse.Change.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.PullBrightnessResponse.Change} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.PullBrightnessResponse.Change.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
changeTime: (f = msg.getChangeTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
brightness: (f = msg.getBrightness()) && proto.smartcore.traits.Brightness.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.PullBrightnessResponse.Change}
 */
proto.smartcore.traits.PullBrightnessResponse.Change.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.PullBrightnessResponse.Change;
  return proto.smartcore.traits.PullBrightnessResponse.Change.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.PullBrightnessResponse.Change} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.PullBrightnessResponse.Change}
 */
proto.smartcore.traits.PullBrightnessResponse.Change.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeTime(value);
      break;
    case 3:
      var value = new proto.smartcore.traits.Brightness;
      reader.readMessage(value,proto.smartcore.traits.Brightness.deserializeBinaryFromReader);
      msg.setBrightness(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.PullBrightnessResponse.Change.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.PullBrightnessResponse.Change.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.PullBrightnessResponse.Change} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.PullBrightnessResponse.Change.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChangeTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getBrightness();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.smartcore.traits.Brightness.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.traits.PullBrightnessResponse.Change.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.traits.PullBrightnessResponse.Change} returns this
 */
proto.smartcore.traits.PullBrightnessResponse.Change.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp change_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.smartcore.traits.PullBrightnessResponse.Change.prototype.getChangeTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.smartcore.traits.PullBrightnessResponse.Change} returns this
*/
proto.smartcore.traits.PullBrightnessResponse.Change.prototype.setChangeTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.PullBrightnessResponse.Change} returns this
 */
proto.smartcore.traits.PullBrightnessResponse.Change.prototype.clearChangeTime = function() {
  return this.setChangeTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.PullBrightnessResponse.Change.prototype.hasChangeTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Brightness brightness = 3;
 * @return {?proto.smartcore.traits.Brightness}
 */
proto.smartcore.traits.PullBrightnessResponse.Change.prototype.getBrightness = function() {
  return /** @type{?proto.smartcore.traits.Brightness} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.traits.Brightness, 3));
};


/**
 * @param {?proto.smartcore.traits.Brightness|undefined} value
 * @return {!proto.smartcore.traits.PullBrightnessResponse.Change} returns this
*/
proto.smartcore.traits.PullBrightnessResponse.Change.prototype.setBrightness = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.PullBrightnessResponse.Change} returns this
 */
proto.smartcore.traits.PullBrightnessResponse.Change.prototype.clearBrightness = function() {
  return this.setBrightness(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.PullBrightnessResponse.Change.prototype.hasBrightness = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Change changes = 1;
 * @return {!Array<!proto.smartcore.traits.PullBrightnessResponse.Change>}
 */
proto.smartcore.traits.PullBrightnessResponse.prototype.getChangesList = function() {
  return /** @type{!Array<!proto.smartcore.traits.PullBrightnessResponse.Change>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.traits.PullBrightnessResponse.Change, 1));
};


/**
 * @param {!Array<!proto.smartcore.traits.PullBrightnessResponse.Change>} value
 * @return {!proto.smartcore.traits.PullBrightnessResponse} returns this
*/
proto.smartcore.traits.PullBrightnessResponse.prototype.setChangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.smartcore.traits.PullBrightnessResponse.Change=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.traits.PullBrightnessResponse.Change}
 */
proto.smartcore.traits.PullBrightnessResponse.prototype.addChanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.smartcore.traits.PullBrightnessResponse.Change, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.traits.PullBrightnessResponse} returns this
 */
proto.smartcore.traits.PullBrightnessResponse.prototype.clearChangesList = function() {
  return this.setChangesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.DescribeBrightnessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.DescribeBrightnessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.DescribeBrightnessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.DescribeBrightnessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.DescribeBrightnessRequest}
 */
proto.smartcore.traits.DescribeBrightnessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.DescribeBrightnessRequest;
  return proto.smartcore.traits.DescribeBrightnessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.DescribeBrightnessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.DescribeBrightnessRequest}
 */
proto.smartcore.traits.DescribeBrightnessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.DescribeBrightnessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.DescribeBrightnessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.DescribeBrightnessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.DescribeBrightnessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.traits.DescribeBrightnessRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.traits.DescribeBrightnessRequest} returns this
 */
proto.smartcore.traits.DescribeBrightnessRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.smartcore.traits);
