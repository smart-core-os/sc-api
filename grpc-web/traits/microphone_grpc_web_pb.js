/**
 * @fileoverview gRPC-Web generated client stub for smartcore.traits
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: traits/microphone.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js')

var types_info_pb = require('../types/info_pb.js')

var types_number_pb = require('../types/number_pb.js')

var types_unit_pb = require('../types/unit_pb.js')
const proto = {};
proto.smartcore = {};
proto.smartcore.traits = require('./microphone_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.traits.MicrophoneApiClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.traits.MicrophoneApiPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.traits.GetAudioLevelRequest,
 *   !proto.smartcore.types.AudioLevel>}
 */
const methodDescriptor_MicrophoneApi_GetAudioLevel = new grpc.web.MethodDescriptor(
  '/smartcore.traits.MicrophoneApi/GetAudioLevel',
  grpc.web.MethodType.UNARY,
  proto.smartcore.traits.GetAudioLevelRequest,
  types_unit_pb.AudioLevel,
  /**
   * @param {!proto.smartcore.traits.GetAudioLevelRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  types_unit_pb.AudioLevel.deserializeBinary
);


/**
 * @param {!proto.smartcore.traits.GetAudioLevelRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.types.AudioLevel)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.types.AudioLevel>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.traits.MicrophoneApiClient.prototype.getAudioLevel =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.traits.MicrophoneApi/GetAudioLevel',
      request,
      metadata || {},
      methodDescriptor_MicrophoneApi_GetAudioLevel,
      callback);
};


/**
 * @param {!proto.smartcore.traits.GetAudioLevelRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.types.AudioLevel>}
 *     Promise that resolves to the response
 */
proto.smartcore.traits.MicrophoneApiPromiseClient.prototype.getAudioLevel =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.traits.MicrophoneApi/GetAudioLevel',
      request,
      metadata || {},
      methodDescriptor_MicrophoneApi_GetAudioLevel);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.traits.UpdateAudioLevelRequest,
 *   !proto.smartcore.types.AudioLevel>}
 */
const methodDescriptor_MicrophoneApi_UpdateAudioLevel = new grpc.web.MethodDescriptor(
  '/smartcore.traits.MicrophoneApi/UpdateAudioLevel',
  grpc.web.MethodType.UNARY,
  proto.smartcore.traits.UpdateAudioLevelRequest,
  types_unit_pb.AudioLevel,
  /**
   * @param {!proto.smartcore.traits.UpdateAudioLevelRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  types_unit_pb.AudioLevel.deserializeBinary
);


/**
 * @param {!proto.smartcore.traits.UpdateAudioLevelRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.types.AudioLevel)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.types.AudioLevel>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.traits.MicrophoneApiClient.prototype.updateAudioLevel =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.traits.MicrophoneApi/UpdateAudioLevel',
      request,
      metadata || {},
      methodDescriptor_MicrophoneApi_UpdateAudioLevel,
      callback);
};


/**
 * @param {!proto.smartcore.traits.UpdateAudioLevelRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.types.AudioLevel>}
 *     Promise that resolves to the response
 */
proto.smartcore.traits.MicrophoneApiPromiseClient.prototype.updateAudioLevel =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.traits.MicrophoneApi/UpdateAudioLevel',
      request,
      metadata || {},
      methodDescriptor_MicrophoneApi_UpdateAudioLevel);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.traits.PullAudioLevelRequest,
 *   !proto.smartcore.traits.PullAudioLevelResponse>}
 */
const methodDescriptor_MicrophoneApi_PullAudioLevel = new grpc.web.MethodDescriptor(
  '/smartcore.traits.MicrophoneApi/PullAudioLevel',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.smartcore.traits.PullAudioLevelRequest,
  proto.smartcore.traits.PullAudioLevelResponse,
  /**
   * @param {!proto.smartcore.traits.PullAudioLevelRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.traits.PullAudioLevelResponse.deserializeBinary
);


/**
 * @param {!proto.smartcore.traits.PullAudioLevelRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.traits.PullAudioLevelResponse>}
 *     The XHR Node Readable Stream
 */
proto.smartcore.traits.MicrophoneApiClient.prototype.pullAudioLevel =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/smartcore.traits.MicrophoneApi/PullAudioLevel',
      request,
      metadata || {},
      methodDescriptor_MicrophoneApi_PullAudioLevel);
};


/**
 * @param {!proto.smartcore.traits.PullAudioLevelRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.traits.PullAudioLevelResponse>}
 *     The XHR Node Readable Stream
 */
proto.smartcore.traits.MicrophoneApiPromiseClient.prototype.pullAudioLevel =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/smartcore.traits.MicrophoneApi/PullAudioLevel',
      request,
      metadata || {},
      methodDescriptor_MicrophoneApi_PullAudioLevel);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.traits.MicrophoneInfoClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.traits.MicrophoneInfoPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.traits.DescribeAudioLevelRequest,
 *   !proto.smartcore.traits.AudioLevelSupport>}
 */
const methodDescriptor_MicrophoneInfo_DescribeAudioLevel = new grpc.web.MethodDescriptor(
  '/smartcore.traits.MicrophoneInfo/DescribeAudioLevel',
  grpc.web.MethodType.UNARY,
  proto.smartcore.traits.DescribeAudioLevelRequest,
  proto.smartcore.traits.AudioLevelSupport,
  /**
   * @param {!proto.smartcore.traits.DescribeAudioLevelRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.traits.AudioLevelSupport.deserializeBinary
);


/**
 * @param {!proto.smartcore.traits.DescribeAudioLevelRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.traits.AudioLevelSupport)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.traits.AudioLevelSupport>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.traits.MicrophoneInfoClient.prototype.describeAudioLevel =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.traits.MicrophoneInfo/DescribeAudioLevel',
      request,
      metadata || {},
      methodDescriptor_MicrophoneInfo_DescribeAudioLevel,
      callback);
};


/**
 * @param {!proto.smartcore.traits.DescribeAudioLevelRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.traits.AudioLevelSupport>}
 *     Promise that resolves to the response
 */
proto.smartcore.traits.MicrophoneInfoPromiseClient.prototype.describeAudioLevel =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.traits.MicrophoneInfo/DescribeAudioLevel',
      request,
      metadata || {},
      methodDescriptor_MicrophoneInfo_DescribeAudioLevel);
};


module.exports = proto.smartcore.traits;

