// source: traits/temperature.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var types_unit_pb = require('../types/unit_pb.js');
goog.object.extend(proto, types_unit_pb);
goog.exportSymbol('proto.smartcore.traits.GetTemperatureRequest', null, global);
goog.exportSymbol('proto.smartcore.traits.PullTemperatureRequest', null, global);
goog.exportSymbol('proto.smartcore.traits.PullTemperatureResponse', null, global);
goog.exportSymbol('proto.smartcore.traits.PullTemperatureResponse.Change', null, global);
goog.exportSymbol('proto.smartcore.traits.Temperature', null, global);
goog.exportSymbol('proto.smartcore.traits.UpdateTemperatureRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.Temperature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.traits.Temperature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.Temperature.displayName = 'proto.smartcore.traits.Temperature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.GetTemperatureRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.traits.GetTemperatureRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.GetTemperatureRequest.displayName = 'proto.smartcore.traits.GetTemperatureRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.PullTemperatureRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.traits.PullTemperatureRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.PullTemperatureRequest.displayName = 'proto.smartcore.traits.PullTemperatureRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.PullTemperatureResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.traits.PullTemperatureResponse.repeatedFields_, null);
};
goog.inherits(proto.smartcore.traits.PullTemperatureResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.PullTemperatureResponse.displayName = 'proto.smartcore.traits.PullTemperatureResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.PullTemperatureResponse.Change = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.traits.PullTemperatureResponse.Change, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.PullTemperatureResponse.Change.displayName = 'proto.smartcore.traits.PullTemperatureResponse.Change';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.traits.UpdateTemperatureRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.traits.UpdateTemperatureRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.traits.UpdateTemperatureRequest.displayName = 'proto.smartcore.traits.UpdateTemperatureRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.Temperature.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.Temperature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.Temperature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.Temperature.toObject = function(includeInstance, msg) {
  var f, obj = {
setPoint: (f = msg.getSetPoint()) && types_unit_pb.Temperature.toObject(includeInstance, f),
measured: (f = msg.getMeasured()) && types_unit_pb.Temperature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.Temperature}
 */
proto.smartcore.traits.Temperature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.Temperature;
  return proto.smartcore.traits.Temperature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.Temperature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.Temperature}
 */
proto.smartcore.traits.Temperature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_unit_pb.Temperature;
      reader.readMessage(value,types_unit_pb.Temperature.deserializeBinaryFromReader);
      msg.setSetPoint(value);
      break;
    case 2:
      var value = new types_unit_pb.Temperature;
      reader.readMessage(value,types_unit_pb.Temperature.deserializeBinaryFromReader);
      msg.setMeasured(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.Temperature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.Temperature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.Temperature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.Temperature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSetPoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_unit_pb.Temperature.serializeBinaryToWriter
    );
  }
  f = message.getMeasured();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      types_unit_pb.Temperature.serializeBinaryToWriter
    );
  }
};


/**
 * optional smartcore.types.Temperature set_point = 1;
 * @return {?proto.smartcore.types.Temperature}
 */
proto.smartcore.traits.Temperature.prototype.getSetPoint = function() {
  return /** @type{?proto.smartcore.types.Temperature} */ (
    jspb.Message.getWrapperField(this, types_unit_pb.Temperature, 1));
};


/**
 * @param {?proto.smartcore.types.Temperature|undefined} value
 * @return {!proto.smartcore.traits.Temperature} returns this
*/
proto.smartcore.traits.Temperature.prototype.setSetPoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.Temperature} returns this
 */
proto.smartcore.traits.Temperature.prototype.clearSetPoint = function() {
  return this.setSetPoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.Temperature.prototype.hasSetPoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional smartcore.types.Temperature measured = 2;
 * @return {?proto.smartcore.types.Temperature}
 */
proto.smartcore.traits.Temperature.prototype.getMeasured = function() {
  return /** @type{?proto.smartcore.types.Temperature} */ (
    jspb.Message.getWrapperField(this, types_unit_pb.Temperature, 2));
};


/**
 * @param {?proto.smartcore.types.Temperature|undefined} value
 * @return {!proto.smartcore.traits.Temperature} returns this
*/
proto.smartcore.traits.Temperature.prototype.setMeasured = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.Temperature} returns this
 */
proto.smartcore.traits.Temperature.prototype.clearMeasured = function() {
  return this.setMeasured(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.Temperature.prototype.hasMeasured = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.GetTemperatureRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.GetTemperatureRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.GetTemperatureRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.GetTemperatureRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
readMask: (f = msg.getReadMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.GetTemperatureRequest}
 */
proto.smartcore.traits.GetTemperatureRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.GetTemperatureRequest;
  return proto.smartcore.traits.GetTemperatureRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.GetTemperatureRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.GetTemperatureRequest}
 */
proto.smartcore.traits.GetTemperatureRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setReadMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.GetTemperatureRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.GetTemperatureRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.GetTemperatureRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.GetTemperatureRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReadMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.traits.GetTemperatureRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.traits.GetTemperatureRequest} returns this
 */
proto.smartcore.traits.GetTemperatureRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.FieldMask read_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.traits.GetTemperatureRequest.prototype.getReadMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.traits.GetTemperatureRequest} returns this
*/
proto.smartcore.traits.GetTemperatureRequest.prototype.setReadMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.GetTemperatureRequest} returns this
 */
proto.smartcore.traits.GetTemperatureRequest.prototype.clearReadMask = function() {
  return this.setReadMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.GetTemperatureRequest.prototype.hasReadMask = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.PullTemperatureRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.PullTemperatureRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.PullTemperatureRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.PullTemperatureRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
readMask: (f = msg.getReadMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
updatesOnly: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.PullTemperatureRequest}
 */
proto.smartcore.traits.PullTemperatureRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.PullTemperatureRequest;
  return proto.smartcore.traits.PullTemperatureRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.PullTemperatureRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.PullTemperatureRequest}
 */
proto.smartcore.traits.PullTemperatureRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setReadMask(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdatesOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.PullTemperatureRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.PullTemperatureRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.PullTemperatureRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.PullTemperatureRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReadMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getUpdatesOnly();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.traits.PullTemperatureRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.traits.PullTemperatureRequest} returns this
 */
proto.smartcore.traits.PullTemperatureRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.FieldMask read_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.traits.PullTemperatureRequest.prototype.getReadMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.traits.PullTemperatureRequest} returns this
*/
proto.smartcore.traits.PullTemperatureRequest.prototype.setReadMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.PullTemperatureRequest} returns this
 */
proto.smartcore.traits.PullTemperatureRequest.prototype.clearReadMask = function() {
  return this.setReadMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.PullTemperatureRequest.prototype.hasReadMask = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool updates_only = 3;
 * @return {boolean}
 */
proto.smartcore.traits.PullTemperatureRequest.prototype.getUpdatesOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.traits.PullTemperatureRequest} returns this
 */
proto.smartcore.traits.PullTemperatureRequest.prototype.setUpdatesOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.traits.PullTemperatureResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.PullTemperatureResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.PullTemperatureResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.PullTemperatureResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.PullTemperatureResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
changesList: jspb.Message.toObjectList(msg.getChangesList(),
    proto.smartcore.traits.PullTemperatureResponse.Change.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.PullTemperatureResponse}
 */
proto.smartcore.traits.PullTemperatureResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.PullTemperatureResponse;
  return proto.smartcore.traits.PullTemperatureResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.PullTemperatureResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.PullTemperatureResponse}
 */
proto.smartcore.traits.PullTemperatureResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.traits.PullTemperatureResponse.Change;
      reader.readMessage(value,proto.smartcore.traits.PullTemperatureResponse.Change.deserializeBinaryFromReader);
      msg.addChanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.PullTemperatureResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.PullTemperatureResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.PullTemperatureResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.PullTemperatureResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.smartcore.traits.PullTemperatureResponse.Change.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.PullTemperatureResponse.Change.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.PullTemperatureResponse.Change.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.PullTemperatureResponse.Change} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.PullTemperatureResponse.Change.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
changeTime: (f = msg.getChangeTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
temperature: (f = msg.getTemperature()) && proto.smartcore.traits.Temperature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.PullTemperatureResponse.Change}
 */
proto.smartcore.traits.PullTemperatureResponse.Change.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.PullTemperatureResponse.Change;
  return proto.smartcore.traits.PullTemperatureResponse.Change.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.PullTemperatureResponse.Change} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.PullTemperatureResponse.Change}
 */
proto.smartcore.traits.PullTemperatureResponse.Change.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeTime(value);
      break;
    case 3:
      var value = new proto.smartcore.traits.Temperature;
      reader.readMessage(value,proto.smartcore.traits.Temperature.deserializeBinaryFromReader);
      msg.setTemperature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.PullTemperatureResponse.Change.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.PullTemperatureResponse.Change.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.PullTemperatureResponse.Change} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.PullTemperatureResponse.Change.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChangeTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTemperature();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.smartcore.traits.Temperature.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.traits.PullTemperatureResponse.Change.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.traits.PullTemperatureResponse.Change} returns this
 */
proto.smartcore.traits.PullTemperatureResponse.Change.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp change_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.smartcore.traits.PullTemperatureResponse.Change.prototype.getChangeTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.smartcore.traits.PullTemperatureResponse.Change} returns this
*/
proto.smartcore.traits.PullTemperatureResponse.Change.prototype.setChangeTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.PullTemperatureResponse.Change} returns this
 */
proto.smartcore.traits.PullTemperatureResponse.Change.prototype.clearChangeTime = function() {
  return this.setChangeTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.PullTemperatureResponse.Change.prototype.hasChangeTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Temperature temperature = 3;
 * @return {?proto.smartcore.traits.Temperature}
 */
proto.smartcore.traits.PullTemperatureResponse.Change.prototype.getTemperature = function() {
  return /** @type{?proto.smartcore.traits.Temperature} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.traits.Temperature, 3));
};


/**
 * @param {?proto.smartcore.traits.Temperature|undefined} value
 * @return {!proto.smartcore.traits.PullTemperatureResponse.Change} returns this
*/
proto.smartcore.traits.PullTemperatureResponse.Change.prototype.setTemperature = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.PullTemperatureResponse.Change} returns this
 */
proto.smartcore.traits.PullTemperatureResponse.Change.prototype.clearTemperature = function() {
  return this.setTemperature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.PullTemperatureResponse.Change.prototype.hasTemperature = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Change changes = 1;
 * @return {!Array<!proto.smartcore.traits.PullTemperatureResponse.Change>}
 */
proto.smartcore.traits.PullTemperatureResponse.prototype.getChangesList = function() {
  return /** @type{!Array<!proto.smartcore.traits.PullTemperatureResponse.Change>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.traits.PullTemperatureResponse.Change, 1));
};


/**
 * @param {!Array<!proto.smartcore.traits.PullTemperatureResponse.Change>} value
 * @return {!proto.smartcore.traits.PullTemperatureResponse} returns this
*/
proto.smartcore.traits.PullTemperatureResponse.prototype.setChangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.smartcore.traits.PullTemperatureResponse.Change=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.traits.PullTemperatureResponse.Change}
 */
proto.smartcore.traits.PullTemperatureResponse.prototype.addChanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.smartcore.traits.PullTemperatureResponse.Change, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.traits.PullTemperatureResponse} returns this
 */
proto.smartcore.traits.PullTemperatureResponse.prototype.clearChangesList = function() {
  return this.setChangesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.traits.UpdateTemperatureRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.traits.UpdateTemperatureRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.traits.UpdateTemperatureRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.UpdateTemperatureRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
temperature: (f = msg.getTemperature()) && proto.smartcore.traits.Temperature.toObject(includeInstance, f),
updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
delta: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.traits.UpdateTemperatureRequest}
 */
proto.smartcore.traits.UpdateTemperatureRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.traits.UpdateTemperatureRequest;
  return proto.smartcore.traits.UpdateTemperatureRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.traits.UpdateTemperatureRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.traits.UpdateTemperatureRequest}
 */
proto.smartcore.traits.UpdateTemperatureRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.smartcore.traits.Temperature;
      reader.readMessage(value,proto.smartcore.traits.Temperature.deserializeBinaryFromReader);
      msg.setTemperature(value);
      break;
    case 3:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDelta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.traits.UpdateTemperatureRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.traits.UpdateTemperatureRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.traits.UpdateTemperatureRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.traits.UpdateTemperatureRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTemperature();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.smartcore.traits.Temperature.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getDelta();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.traits.UpdateTemperatureRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.traits.UpdateTemperatureRequest} returns this
 */
proto.smartcore.traits.UpdateTemperatureRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Temperature temperature = 2;
 * @return {?proto.smartcore.traits.Temperature}
 */
proto.smartcore.traits.UpdateTemperatureRequest.prototype.getTemperature = function() {
  return /** @type{?proto.smartcore.traits.Temperature} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.traits.Temperature, 2));
};


/**
 * @param {?proto.smartcore.traits.Temperature|undefined} value
 * @return {!proto.smartcore.traits.UpdateTemperatureRequest} returns this
*/
proto.smartcore.traits.UpdateTemperatureRequest.prototype.setTemperature = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.UpdateTemperatureRequest} returns this
 */
proto.smartcore.traits.UpdateTemperatureRequest.prototype.clearTemperature = function() {
  return this.setTemperature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.UpdateTemperatureRequest.prototype.hasTemperature = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 3;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.traits.UpdateTemperatureRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 3));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.traits.UpdateTemperatureRequest} returns this
*/
proto.smartcore.traits.UpdateTemperatureRequest.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.traits.UpdateTemperatureRequest} returns this
 */
proto.smartcore.traits.UpdateTemperatureRequest.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.traits.UpdateTemperatureRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool delta = 4;
 * @return {boolean}
 */
proto.smartcore.traits.UpdateTemperatureRequest.prototype.getDelta = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.traits.UpdateTemperatureRequest} returns this
 */
proto.smartcore.traits.UpdateTemperatureRequest.prototype.setDelta = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


goog.object.extend(exports, proto.smartcore.traits);
